{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-trip/add-trip.component.css","webpack:///./src/app/add-trip/add-trip.component.html","webpack:///./src/app/add-trip/add-trip.component.ts","webpack:///./src/app/app-router.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-trip/edit-trip.component.css","webpack:///./src/app/edit-trip/edit-trip.component.html","webpack:///./src/app/edit-trip/edit-trip.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/services/authentication.ts","webpack:///./src/app/services/trip-data.service.ts","webpack:///./src/app/storage.ts","webpack:///./src/app/trip-card/trip-card.component.css","webpack:///./src/app/trip-card/trip-card.component.html","webpack:///./src/app/trip-card/trip-card.component.ts","webpack:///./src/app/trip-listing/trip-listing.component.css","webpack:///./src/app/trip-listing/trip-listing.component.html","webpack:///./src/app/trip-listing/trip-listing.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-3\\\">\\n  <h2 class=\\\"text-center\\\">Add Trip</h2>\\n  <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <div class=\\\"form-group\\\">\\n      <label>Code:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"code\\\" placeholder=\\\"Code\\\" class=\\\"form-control\\\" \\n      [ngClass]=\\\"{ 'is-invalid': submitted && f.code.errors }\\\">\\n          <div *ngIf=\\\"submitted && f.code.errors\\\">\\n              <div *ngIf=\\\"f.code.errors.required\\\">\\n              Trip Code is required\\n              </div>\\n          </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <label>Name:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"name\\\"\\n      placeholder=\\\"Name\\\" class=\\\"form-control\\\"\\n      [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n      <div *ngIf=\\\"submitted && f.name.errors\\\">\\n          <div *ngIf=\\\"f.name.errors.required\\\">\\n          Name is required\\n          </div>\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n      <label>Length:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"length\\\"\\n      placeholder=\\\"Length\\\" class=\\\"form-control\\\"\\n      [ngClass]=\\\"{ 'is-invalid': submitted && f.length.errors }\\\">\\n      <div *ngIf=\\\"submitted && f.length.errors\\\">\\n          <div *ngIf=\\\"f.length.errors.required\\\">\\n          Length is required\\n          </div>\\n      </div>\\n  </div> \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Start Date:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"start\\\"\\n    placeholder=\\\"Start\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.start.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.start.errors\\\">\\n        <div *ngIf=\\\"f.start.errors.required\\\">\\n        Start Date is required\\n        </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label>Resort:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"resort\\\"\\n    placeholder=\\\"Resort\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.resort.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.resort.errors\\\">\\n        <div *ngIf=\\\"f.resort.errors.required\\\">\\n        Resort is required\\n        </div>\\n    </div>\\n  </div> \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Per Person:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"perPerson\\\"\\n    placeholder=\\\"PerPerson\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.perPerson.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.perPerson.errors\\\">\\n        <div *ngIf=\\\"f.perPerson.errors.required\\\">\\n        Per Person Amount is required\\n        </div>\\n    </div>\\n  </div> \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Image:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"image\\\"\\n    placeholder=\\\"Image\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.image.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.image.errors\\\">\\n        <div *ngIf=\\\"f.image.errors.required\\\">\\n        Image is required\\n        </div>\\n    </div>\\n  </div>  \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Description:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"description\\\"\\n    placeholder=\\\"Description\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.description.errors\\\">\\n        <div *ngIf=\\\"f.description.errors.required\\\">\\n        Description is required\\n        </div>\\n    </div>\\n  </div> \\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Save</button>\\n\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { TripDataService } from '../services/trip-data.service';\n\n@Component({\n  selector: 'app-add-trip',\n  templateUrl: './add-trip.component.html',\n  styleUrls: ['./add-trip.component.css']\n})\nexport class AddTripComponent implements OnInit {\n  addForm: FormGroup;\n  submitted = false;\n\n  constructor(\n  private formBuilder: FormBuilder,\n  private router: Router,\n  private tripService: TripDataService\n  ) { }\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      _id: [],\n      code: ['', Validators.required],\n      name: ['', Validators.required],\n      length: ['', Validators.required],\n      start: ['', Validators.required],\n      resort: ['', Validators.required],\n      perPerson: ['', Validators.required],\n      image: ['', Validators.required],\n      description: ['', Validators.required],\n    })\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if(this.addForm.valid){\n    this.tripService.addTrip(this.addForm.value)\n    .then( data => {\n      console.log(data);\n      this.router.navigate(['']);\n    });\n  }\n}\n\n// get the form short name to access the form fields\nget f() { return this.addForm.controls; }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TripListingComponent } from './trip-listing/trip-listing.component';\nimport { AddTripComponent } from './add-trip/add-trip.component';\nimport { EditTripComponent } from './edit-trip/edit-trip.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: 'add-trip', component: AddTripComponent },\n    { path: 'edit-trip', component: EditTripComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'list-trips', component: TripListingComponent },\n    { path: '', component: HomeComponent, pathMatch: 'full' }\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Travlr Admin';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-router.module';\nimport { TripListingComponent } from './trip-listing/trip-listing.component';\nimport { TripCardComponent } from './trip-card/trip-card.component';\nimport { TripDataService } from './services/trip-data.service';\nimport { AddTripComponent } from './add-trip/add-trip.component';\nimport { EditTripComponent } from './edit-trip/edit-trip.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TripListingComponent,\n    TripCardComponent,\n    AddTripComponent,\n    EditTripComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [\n    TripDataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-3\\\">\\n  <h2 class=\\\"text-center\\\">Edit Trip</h2>\\n  <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <div class=\\\"form-group\\\">\\n      <label>Code:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"code\\\" placeholder=\\\"Code\\\" class=\\\"form-control\\\" \\n      [ngClass]=\\\"{ 'is-invalid': submitted && f.code.errors }\\\">\\n          <div *ngIf=\\\"submitted && f.code.errors\\\">\\n              <div *ngIf=\\\"f.code.errors.required\\\">\\n              Trip Code is required\\n              </div>\\n          </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <label>Name:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"name\\\"\\n      placeholder=\\\"Name\\\" class=\\\"form-control\\\"\\n      [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n      <div *ngIf=\\\"submitted && f.name.errors\\\">\\n          <div *ngIf=\\\"f.name.errors.required\\\">\\n          Name is required\\n          </div>\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n      <label>Length:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"length\\\"\\n      placeholder=\\\"Length\\\" class=\\\"form-control\\\"\\n      [ngClass]=\\\"{ 'is-invalid': submitted && f.length.errors }\\\">\\n      <div *ngIf=\\\"submitted && f.length.errors\\\">\\n          <div *ngIf=\\\"f.length.errors.required\\\">\\n          Length is required\\n          </div>\\n      </div>\\n  </div> \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Start Date:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"start\\\"\\n    placeholder=\\\"Start\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.start.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.start.errors\\\">\\n        <div *ngIf=\\\"f.start.errors.required\\\">\\n        Start Date is required\\n        </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label>Resort:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"resort\\\"\\n    placeholder=\\\"Resort\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.resort.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.resort.errors\\\">\\n        <div *ngIf=\\\"f.resort.errors.required\\\">\\n        Resort is required\\n        </div>\\n    </div>\\n  </div> \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Per Person:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"perPerson\\\"\\n    placeholder=\\\"PerPerson\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.perPerson.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.perPerson.errors\\\">\\n        <div *ngIf=\\\"f.perPerson.errors.required\\\">\\n        Per Person Amount is required\\n        </div>\\n    </div>\\n  </div> \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Image:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"image\\\"\\n    placeholder=\\\"Image\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.image.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.image.errors\\\">\\n        <div *ngIf=\\\"f.image.errors.required\\\">\\n        Image is required\\n        </div>\\n    </div>\\n  </div>  \\n\\n  <div class=\\\"form-group\\\">\\n    <label>Description:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"description\\\"\\n    placeholder=\\\"Description\\\" class=\\\"form-control\\\"\\n    [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\">\\n    <div *ngIf=\\\"submitted && f.description.errors\\\">\\n        <div *ngIf=\\\"f.description.errors.required\\\">\\n        Description is required\\n        </div>\\n    </div>\\n  </div> \\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Save</button>\\n\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TripDataService } from '../services/trip-data.service';\n\n@Component({\n  selector: 'app-edit-trip',\n  templateUrl: './edit-trip.component.html',\n  styleUrls: ['./edit-trip.component.css']\n})\nexport class EditTripComponent implements OnInit {\n\n  editForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private tripService: TripDataService\n  ) { }\n\n  ngOnInit() {\n    // retrieve stashed tripId\n    let tripCode = localStorage.getItem(\"tripCode\");\n    if (!tripCode) {\n      alert(\"Something wrong, couldn't find where I stashed tripCode!\");\n      this.router.navigate(['']);\n      return;\n    }\n    console.log('EditTripComponent#onInit found tripCode ' + tripCode);\n\n    // initialize form\n    this.editForm = this.formBuilder.group({\n      _id: [],\n      code: [tripCode, Validators.required],\n      name: ['', Validators.required],\n      length: ['', Validators.required],\n      start: ['', Validators.required],\n      resort: ['', Validators.required],\n      perPerson: ['', Validators.required],\n      image: ['', Validators.required],\n      description: ['', Validators.required],\n    })\n    console.log('EditTripComponent#onInit calling TripDataService#getTrip(\\'' + tripCode + '\\')');\n    this.tripService.getTrip(tripCode)\n      .then(data => {\n        console.log(data);\n        // Don't use editForm.setValue() as it will throw console error\n        this.editForm.patchValue(data[0]);\n    })\n  }\n\n   onSubmit() {\n    this.submitted = true;\n    if (this.editForm.valid) {\n      this.tripService.updateTrip(this.editForm.value)\n        .then(data => {\n          console.log(data);\n          this.router.navigate(['']);\n      });\n    }\n  }\n}","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\" *ngIf=\\\"!isLoggedIn()\\\">\\n  <br/>\\n  <h2>Please login to continue</h2>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12 col-md-8\\\">\\n  <h2>Login</h2>\\n  <form (ngSubmit)=\\\"onLoginSubmit(evt)\\\">\\n    <div role=\\\"alert\\\" *ngIf=\\\"formErrors\\\" class=\\\"alert alert-danger\\\">{{ formError }}</div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email Address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email address\\\" [(ngModel)]=\\\"credentials.email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"e.g 12+ alphanumerics\\\" [(ngModel)]=\\\"credentials.password\\\">\\n    </div>\\n    <button type=\\\"submit\\\" role=\\\"button\\\" class=\\\"btn-btnprimary\\\">Sign In!</button>\\n  </form>\\n  </div>\\n </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication';\nimport { User } from '../models/user';\n\n@Component({\nselector: 'app-login',\ntemplateUrl: './login.component.html',\nstyleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  public formError: string = '';\n  public credentials = {\n  name: '',\n  email: '',\n  password: ''\n  };\n\n  constructor(\n  private router: Router,\n  private authenticationService: AuthenticationService\n  ) { }\n\n  ngOnInit() {}\n  public onLoginSubmit(): void {\n    this.formError = '';\n    if (!this.credentials.email || !this.credentials.password) {\n      this.formError = 'All fields are required, please try again';\n      } else {\n        this.doLogin();\n      }\n  }\n\n  private doLogin(): void {\n    this.authenticationService.login(this.credentials)\n      .then(() => this.router.navigateByUrl('#'))\n      .catch((message) => this.formError = message);\n  }\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img src=\\\"/assets/images/logo.png\\\"></a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" datatoggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" ariacontrols=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" arialabel=\\\"Toggle navigation\\\">\\n  <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"list-trips\\\">Trips<span class=\\\" sr-only \\\">(current)</span></a>\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-end\\\">\\n    <a class=\\\"navbar-item\\\" routerLink=\\\"login\\\" *ngIf=\\\"!isLoggedIn()\\\">\\n      <span class=\\\"has-icon-left\\\">Log In</span>\\n    </a>\\n    <a class=\\\"navbar-item\\\" (click)=\\\"onLogout()\\\" *ngIf=\\\"isLoggedIn()\\\">\\n      <span class=\\\"has-icon-left\\\">Log Out</span>\\n    </a>\\n  </div>\\n </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent implements OnInit {\n  constructor(\n  private authenticationService: AuthenticationService\n) { }\n\nngOnInit() { }\n\npublic isLoggedIn(): boolean {\n  return this.authenticationService.isLoggedIn();\n}\n\nprivate onLogout(): void {\n  return this.authenticationService.logout();\n}\n}","import { Inject, Injectable } from '@angular/core';\nimport { BROWSER_STORAGE } from '../storage';\nimport { User } from '../models/user';\nimport { AuthResponse } from '../models/authresponse';\nimport { TripDataService } from './trip-data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthenticationService {\n\nconstructor(\n   \n    @Inject(BROWSER_STORAGE) private storage: Storage,\n    private tripDataService: TripDataService\n) { }\n\npublic getToken(): string {\n    return this.storage.getItem('travlr-token');\n}\n\npublic saveToken(token: string): void {\n    this.storage.setItem('travlr-token', token);\n}\n\npublic login(user: User): Promise<any> {\n    return this.tripDataService.login(user)\n        .then((authResp: AuthResponse) => this.saveToken(authResp.token));\n}\n\npublic register(user: User): Promise<any> {\n    return this.tripDataService.register(user)\n .then((authResp: AuthResponse) => this.saveToken(authResp.token));\n}\n\npublic logout(): void {\n    this.storage.removeItem('travlr-token');\n}\n\npublic isLoggedIn(): boolean {\n    const token: string = this.getToken();\n    if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return payload.exp > (Date.now() / 1000);\n    } else {\n        return false;\n    }\n}\n\npublic getCurrentUser(): User {\n    if (this.isLoggedIn()) {\n        const token: string = this.getToken();\n        const { email, name } = JSON.parse(atob(token.split('.')[1]));\n        return { email, name } as User;\n }\n}\n}","import { Injectable, Inject } from \"@angular/core\";\nimport { Http, Headers } from \"@angular/http\";\n\nimport { Trip } from \"../models/trip\";\nimport { BROWSER_STORAGE } from \"../storage\";\nimport { User } from \"../models/user\";\nimport { AuthResponse } from \"../models/authresponse\";\n\n@Injectable()\nexport class TripDataService {\n  constructor(\n    private http: Http,\n    @Inject(BROWSER_STORAGE) private storage: Storage\n  ) {}\n\n  private apiBaseUrl = \"http://localhost:3000/api/\";\n  private tripUrl = `${this.apiBaseUrl}trips/`;\n\n  public getTrips(): Promise<Trip[]> {\n    console.log(\"Inside TripDataService#getTrips\");\n    return this.http\n      .get(`${this.apiBaseUrl}trips`)\n      .toPromise()\n      .then((response) => response.json() as Trip[])\n      .catch(this.handleError);\n  }\n\n  public getTrip(tripCode: string): Promise<Trip> {\n    console.log(\"Inside TripDataService#getdTrip\");\n    return this.http\n      .get(this.tripUrl + tripCode)\n      .toPromise()\n      .then((response) => response.json() as Trip)\n      .catch(this.handleError);\n  }\n\n  public addTrip(formData: Trip): Promise<Trip> {\n    console.log(\"Inside TripDataService#addTrip\");\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"travlr-token\")}`,\n    });\n    return this.http\n      .post(this.tripUrl, formData, { headers: headers })\n      .toPromise()\n      .then((response) => response.json() as Trip[])\n      .catch(this.handleError);\n  }\n\n  public updateTrip(formData: Trip): Promise<Trip> {\n    console.log(\"Inside TripDataService#updateTrip\");\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"travlr-token\")}`,\n    });\n    return this.http\n      .put(this.tripUrl + formData.code, formData, { headers: headers })\n      .toPromise()\n      .then((response) => response.json() as Trip[])\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error(\"Something has gone wrong\", error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  \n  public login(user: User): Promise<AuthResponse> {\n    return this.makeAuthApiCall(\"login\", user);\n  }\n\n  public register(user: User): Promise<AuthResponse> {\n    return this.makeAuthApiCall(\"register\", user);\n  }\n\n  private makeAuthApiCall(urlPath: string, user: User): Promise<AuthResponse> {\n    const url: string = `${this.apiBaseUrl}/${urlPath}`;\n    return this.http\n      .post(url, user)\n      .toPromise()\n      .then((response) => response.json() as AuthResponse)\n      .catch(this.handleError);\n  }\n}","import { InjectionToken } from '@angular/core';\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n    providedIn: 'root',\n    factory: () => localStorage\n});","module.exports = \"\"","module.exports = \"<div class=\\\"card m1-4\\\" style=\\\"width: 18rem;\\\">\\n  <div class=\\\"card-header\\\">{{ trip.name }}</div>\\n  <img src=\\\"assets/images/{{ trip.image }}\\\" alt=\\\"trip thumbnail\\\" class=\\\"card-img-top\\\">\\n  <div class=\\\"card-body\\\">\\n    <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{ trip.resort }}</h6>\\n    <p class=\\\"card-subtitle mt-3 mb-3 text-muted\\\">{{ trip.length }} only \\n      {{ trip.perPerson | currency:'USD':true }} per person</p>\\n      <p class=\\\"card-text\\\" [innerHTML]=\\\"trip.description\\\"></p>\\n      <div *ngIf=\\\"isLoggedIn()\\\">\\n        <button (click)=\\\"editTrip(trip)\\\" class=\\\"btn btn-info\\\">Edit</button>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input} from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Trip } from '../models/trip';\nimport { AuthenticationService } from '../services/authentication';\n\n@Component({\n  selector: 'app-trip-card',\n  templateUrl: './trip-card.component.html',\n  styleUrls: ['./trip-card.component.css']\n})\nexport class TripCardComponent implements OnInit {\n\n  @Input('trip') trip: Trip;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  private editTrip(trip: Trip): void {\n    localStorage.removeItem(\"tripCode\");\n    localStorage.setItem(\"tripCode\", trip.code);\n    this.router.navigate(['edit-trip']);\n  }\n\n  public isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"isLoggedIn()\\\">\\n  <button (click)=\\\"addTrip()\\\" class=\\\"btn btn-info\\\">Add Trip</button>\\n</div>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let trip of trips\\\">\\n      <app-trip-card [trip]=\\\"trip\\\" class=\\\"card-deck mt-2\\\"></app-trip-card>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { TripDataService } from '../services/trip-data.service';\nimport { Trip } from '../models/trip';\nimport { AuthenticationService } from '../services/authentication';\n\n@Component({\n  selector: 'app-trip-listing',\n  templateUrl: './trip-listing.component.html',\n  styleUrls: ['./trip-listing.component.css'],\n  providers: [TripDataService]\n})\nexport class TripListingComponent implements OnInit {\n\n  trips: Trip[];\n\n  message: string;\n\n  constructor(\n    private tripDataService: TripDataService,\n    private authService: AuthenticationService,\n    private router: Router\n    ) { }\n\n    private addTrip(): void {\n      console.log('Inside TripListingComponent#addTrip');\n      this.router.navigate(['add-trip']);\n    }\n\n  private getTrips(): void {\n    console.log('Inside TripListingComponent#getTrips');\n    this.message = 'Searching for trips';\n    this.tripDataService\n      .getTrips()\n      .then(foundTrips => {\n        this.message = foundTrips.length > 0 ? '' : 'No trips found';\n        this.trips = foundTrips;\n      });\n  }\n\n  public isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  ngOnInit() {\n    this.getTrips();\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}